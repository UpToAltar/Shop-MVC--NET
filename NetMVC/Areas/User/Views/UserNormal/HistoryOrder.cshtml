@using NetMVC.Areas.Payment.Models
@using X.PagedList.Mvc.Core
@using Microsoft.AspNetCore.Identity
@model NetMVC.Areas.Order.Models.IndeOrdersModel
@inject UserManager<AppUser> _userManager;
@{
    ViewData["Title"] = "History Order";
    Layout = "_Layout";
    int number = 0;
    var page = Context.Request.Query["page"];
    var param = await _userManager.GetUserAsync(User);
}
<head>
    <link rel="stylesheet" type="text/css" href="~/Assets/Main/styles/contact_styles.css">
    <link rel="stylesheet" type="text/css" href="~/Assets/Main/styles/contact_responsive.css">
</head>
<div class="container contact_container">
    
    <div class="row">
        <div class="col">
            <div class="breadcrumbs d-flex flex-row align-items-center">
                <ul>
                    <li><a asp-area="" asp-controller="Home" asp-action="Index">Home</a></li>
                    <li class="active"><a href="#"><i class="fa fa-angle-right" aria-hidden="true"></i>History Order</a></li>
                </ul>
            </div>
        </div>
    </div>

    <partial name="_StatusMessage"/>
    <div class="m-3">
        <h1>LIST ORDERS - Total : @Model.totalOrders</h1>
        <p style="display: flex">
            @Html.DropDownListFor(m => m.StatusOrder,
                new SelectList(Enum.GetValues(typeof(StatusOrder))),
                "All Status", new
                {
                    @class = "form-control optionSelect", style = "width: 200px;margin-left:30px, ", href = Url.Action("HistoryOrder", new { page, id = param.Id })
                })
        </p>

        <table class="table">
            <thead>
            <tr>
                <th>
                    <input type="checkbox" id="selectAll"/>
                </th>
                <th>
                    #
                </th>
                <th style="width: 180px">
                    Order Code
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.orders[0].CustomerName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.orders[0].MethodPay)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.orders[0].TotalAmount)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.orders[0].Status)
                </th>
            </tr>
            </thead>
            <tbody>
            @foreach (var item in Model.orders)
            {
                number++;
                var index = number + (Model.orders.PageNumber - 1) * Model.orders.PageSize;
                var methodPayment = (MethodPayment)item.MethodPay;
                var status = (StatusOrder)item.Status;
                var color = "#166fe5";
                if (status == StatusOrder.Pending)
                {
                    color = "#f7b924";
                }
                else if (status == StatusOrder.ConfirmedByUser)
                {
                    color = "#166fe5";
                }
                else if (status == StatusOrder.ConfirmedByAdmin)
                {
                    color = "#e29fb6";
                }
                else if (status == StatusOrder.Cancelled)
                {
                    color = "#ff5247";
                }
                else if (status == StatusOrder.Shipping)
                {
                    color = "#6ac2b6";
                }
                else if (status == StatusOrder.Completed)
                {
                    color = "#0f830b";
                }
                <tr>
                    <td>
                        <input type="checkbox" class="selectItem" value="@item.Id"/>
                    </td>
                    <td>
                        @index
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Code)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CustomerName)
                    </td>
                    <td>
                        @methodPayment
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.TotalAmount)$
                    </td>
                    <td style="color: @color">
                        <strong>@status</strong>
                    </td>
                    <td>
                        <form asp-action="UserDeleteOrder">
                            <a class="btn btn-info" asp-action="HistoryDetail" asp-route-id="@item.Id">Details</a>
                            
                            @if (status == StatusOrder.Pending || status == StatusOrder.ConfirmedByUser || status == StatusOrder.ConfirmedByAdmin)
                            {
                                <input type="hidden" name="id" value="@item.Id"/>
                                <input type="submit" value="Cancel" class="btn btn-danger"/>
                            }
                        </form>
                        
                    </td>
                </tr>
            }
            </tbody>
        </table>
        <div class="m-3 d-flex flex-row-reverse">
            @Html.PagedListPager(Model.orders, page => Url.Action("HistoryOrder", new { page, id = param.Id }))
        </div>
    </div>

</div>

@* notification toast *@
<div id="notiToast"></div>

<script>
let dropdown = document.querySelector('.optionSelect');
        let options = dropdown.options;
        for (let i = 0; i < options.length; i++) {
            options[i].id = i-1;
        }
        dropdown.addEventListener('change', function () {
            let urlBase = dropdown.getAttribute('href');
            let url="";
            if (urlBase.includes("?"))
            {
                url = urlBase + "&status=" + dropdown.options[dropdown.selectedIndex].id;
                window.location.href = url;
            }
            else
            {
                url = urlBase + "?status=" + dropdown.options[dropdown.selectedIndex].id;
                window.location.href = url;
            }
        
            window.location.href = url;
        });
</script>

